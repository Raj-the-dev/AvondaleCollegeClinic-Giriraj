@model AvondaleCollegeClinic.Models.Appointment
@{
    ViewData["Title"] = "Edit Appointment";
    bool lockStudent = ViewBag.LockStudent == true;
    string currentSlot = ViewBag.CurrentSlot as string ?? "";
}

<section class="wrap page">
    <h1>@ViewData["Title"]</h1>

    <div asp-validation-summary="ModelOnly" class="validation-summary-errors"></div>

    <form asp-action="Edit"
          asp-route-id="@Model.AppointmentID"
          method="post">
        <input type="hidden" asp-for="AppointmentID" />


        <div class="form-row">
            <label asp-for="StudentID"></label>

            @if (lockStudent)
            {
                <!-- Show the dropdown but disabled so they can see it -->
                <select asp-for="StudentID" asp-items="ViewBag.StudentID" class="input-line" disabled="disabled"></select>

                <!-- Hidden input so the value still posts (disabled controls don't post) -->
                <input type="hidden" asp-for="StudentID" />
            }
            else
            {
                <!-- Normal editable dropdown for everyone else -->
                <select asp-for="StudentID" asp-items="ViewBag.StudentID" class="input-line"></select>
            }

            <span asp-validation-for="StudentID" class="error-summary"></span>
        </div>

        <!-- Doctor -->
        <div class="form-row">
            <label asp-for="DoctorID">Doctor</label>
            <select asp-for="DoctorID" id="DoctorID" class="input-line" asp-items="ViewBag.DoctorID"></select>
            <span asp-validation-for="DoctorID" class="error-summary"></span>
        </div>

        <!-- Hidden field so server receives the selected slot as AppointmentDateTime (ISO) -->
        <input asp-for="AppointmentDateTime" type="hidden" id="apptDateTimeHidden" />

        <!-- Date (weekdays only, next 30 days) -->
        <div class="form-row">
            <label>Date</label>
            <select id="selectedDate" name="selectedDate" class="input-line" asp-items="ViewBag.DateOptions"></select>
            <small class="hint">Weekdays only, up to 30 days ahead.</small>
        </div>

        <!-- Time slot -->
        <div class="form-row">
            <label>Time slot</label>
            <select name="selectedSlot" id="selectedSlot" class="input-line" asp-items="ViewBag.Slots"></select>
            <span class="error-summary">@Html.ValidationMessage("AppointmentDateTime")</span>
        </div>

        <!-- Reason -->
        <div class="form-row">
            <label asp-for="Reason"></label>
            <input asp-for="Reason" class="input-line" />
            <span asp-validation-for="Reason" class="error-summary"></span>
        </div>

        <!-- Status -->
        <div class="form-row">
            <label asp-for="Status"></label>
            <select asp-for="Status" class="input-line" asp-items="Html.GetEnumSelectList<AppointmentStatus>()"></select>
            <span asp-validation-for="Status" class="error-summary"></span>
        </div>

        <div class="form-buttons">
            <button type="submit" class="btn">Save</button>
            <a asp-action="Index" class="link-quiet">Back to list</a>
        </div>
    </form>
</section>

@section Scripts {
    <script>
        async function loadSlots() {
            const doctorId = document.getElementById('DoctorID').value;
            const date = document.getElementById('selectedDate').value;
            const slotSel = document.getElementById('selectedSlot');
            const current = '@currentSlot'; // keep current selection when reloading

            slotSel.innerHTML = "";

            if (!doctorId || !date) return;

            const url = '@Url.Action("GetSlots", "Appointments")'
                + '?doctorId=' + encodeURIComponent(doctorId)
                + '&date=' + encodeURIComponent(date);

            const res = await fetch(url, { cache: 'no-store' });
            const data = await res.json(); // [{value,text},...]

            data.forEach(x => {
                const opt = document.createElement('option');
                opt.value = x.value;
                opt.text = x.text;
                if (current && x.value === current) opt.selected = true;
                slotSel.appendChild(opt);
            });
        }

        document.getElementById('DoctorID').addEventListener('change', () => { loadSlots(); });
        document.getElementById('selectedDate').addEventListener('change', () => { loadSlots(); });

        // initial fill on page load
        document.addEventListener('DOMContentLoaded', loadSlots);

        // On submit, put the selected slot (ISO) into the hidden AppointmentDateTime
        document.querySelector('form[asp-action="Create"]')
            .addEventListener('submit', function () {
                document.getElementById('apptDateTimeHidden').value =
                    document.getElementById('selectedSlot').value || "";
            });
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}
